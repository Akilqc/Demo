from __future__ import division
from aip import AipSpeech
from Record import reco
import speech_recognition as sr
import mp3play
import time

APP_ID = '18732120'
APP_KEY = 'RKcl7nwIGbs76Ck0Y1QhYrC6'
SECRET_KEY = '7GUsGcMt13sOgf3Gw9xFz4apDIlxTX4R'

client = AipSpeech(APP_ID, APP_KEY, SECRET_KEY)


def reco(rate=16000):  # 固定采样率
    r = sr.Recognizer()
    with sr.Microphone(sample_rate = rate) as source:
        print('开始录音！')
        audio = r.listen(source)
    # 将录音转为wav文件
    with open(r'D:\Code\Demo\VS_Code\Speech-Recognition\RecordingFile\recording.wav', 'wb') as f:
        f.write(audio.get_wav_data())
    print('录音结束！')


def record_to_api():
    with open(r'D:\Code\Demo\VS_Code\Speech-Recognition\RecordingFile\recording.wav', 'rb') as f:
        audio_data = f.read()
    result = client.asr(audio_data, 'wav', 16000, {'dev_pid': 1537})
    print(result['result'][0])


# text为转换文本
def word_to_speech(text):
    speech = client.synthesis(text, 'zh', 1,{
        'spd': 4,
        'vol': 5,
        'per': 0,
    })

    # 保存为mp3格式文件
    if not isinstance(speech, dict):
        with open(r'D:\Code\Demo\VS_Code\Speech-Recognition\RecordingFile\Baidu-audio.mp3', 'wb') as f:
            f.write(speech)

    play = mp3play.load(r'D:\Code\Demo\VS_Code\Speech-Recognition\RecordingFile\Baidu-audio.mp3')
    play.play()
    # 获取mp3格式文件的时长，返回毫秒
    duration = play.milliseconds()
    time.sleep(duration/1000)
    play.stop()


# reco()
# start = time.time()
# record_to_api()
# end = time.time()
# print('用时：', end - start)

text = str(input("输入想转换的文本："))
word_to_speech(text)